/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PokedexAppLayoutRouteImport } from './routes/pokedex/_appLayout'
import { Route as PokedexAppLayoutIndexRouteImport } from './routes/pokedex/_appLayout/index'
import { Route as PokedexAppLayoutGamesRouteImport } from './routes/pokedex/_appLayout/games'
import { Route as PokedexAppLayoutFavoritesRouteImport } from './routes/pokedex/_appLayout/favorites'
import { Route as PokedexAppLayoutAboutRouteImport } from './routes/pokedex/_appLayout/about'
import { Route as PokedexAppLayoutPokemonIdRouteImport } from './routes/pokedex/_appLayout/$pokemonId'

const PokedexRouteImport = createFileRoute('/pokedex')()

const PokedexRoute = PokedexRouteImport.update({
  id: '/pokedex',
  path: '/pokedex',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PokedexAppLayoutRoute = PokedexAppLayoutRouteImport.update({
  id: '/_appLayout',
  getParentRoute: () => PokedexRoute,
} as any)
const PokedexAppLayoutIndexRoute = PokedexAppLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PokedexAppLayoutRoute,
} as any)
const PokedexAppLayoutGamesRoute = PokedexAppLayoutGamesRouteImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => PokedexAppLayoutRoute,
} as any)
const PokedexAppLayoutFavoritesRoute =
  PokedexAppLayoutFavoritesRouteImport.update({
    id: '/favorites',
    path: '/favorites',
    getParentRoute: () => PokedexAppLayoutRoute,
  } as any)
const PokedexAppLayoutAboutRoute = PokedexAppLayoutAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => PokedexAppLayoutRoute,
} as any)
const PokedexAppLayoutPokemonIdRoute =
  PokedexAppLayoutPokemonIdRouteImport.update({
    id: '/$pokemonId',
    path: '/$pokemonId',
    getParentRoute: () => PokedexAppLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pokedex': typeof PokedexAppLayoutRouteWithChildren
  '/pokedex/$pokemonId': typeof PokedexAppLayoutPokemonIdRoute
  '/pokedex/about': typeof PokedexAppLayoutAboutRoute
  '/pokedex/favorites': typeof PokedexAppLayoutFavoritesRoute
  '/pokedex/games': typeof PokedexAppLayoutGamesRoute
  '/pokedex/': typeof PokedexAppLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/pokedex': typeof PokedexAppLayoutIndexRoute
  '/pokedex/$pokemonId': typeof PokedexAppLayoutPokemonIdRoute
  '/pokedex/about': typeof PokedexAppLayoutAboutRoute
  '/pokedex/favorites': typeof PokedexAppLayoutFavoritesRoute
  '/pokedex/games': typeof PokedexAppLayoutGamesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/pokedex': typeof PokedexRouteWithChildren
  '/pokedex/_appLayout': typeof PokedexAppLayoutRouteWithChildren
  '/pokedex/_appLayout/$pokemonId': typeof PokedexAppLayoutPokemonIdRoute
  '/pokedex/_appLayout/about': typeof PokedexAppLayoutAboutRoute
  '/pokedex/_appLayout/favorites': typeof PokedexAppLayoutFavoritesRoute
  '/pokedex/_appLayout/games': typeof PokedexAppLayoutGamesRoute
  '/pokedex/_appLayout/': typeof PokedexAppLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/pokedex'
    | '/pokedex/$pokemonId'
    | '/pokedex/about'
    | '/pokedex/favorites'
    | '/pokedex/games'
    | '/pokedex/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/pokedex'
    | '/pokedex/$pokemonId'
    | '/pokedex/about'
    | '/pokedex/favorites'
    | '/pokedex/games'
  id:
    | '__root__'
    | '/'
    | '/pokedex'
    | '/pokedex/_appLayout'
    | '/pokedex/_appLayout/$pokemonId'
    | '/pokedex/_appLayout/about'
    | '/pokedex/_appLayout/favorites'
    | '/pokedex/_appLayout/games'
    | '/pokedex/_appLayout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PokedexRoute: typeof PokedexRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/pokedex': {
      id: '/pokedex'
      path: '/pokedex'
      fullPath: '/pokedex'
      preLoaderRoute: typeof PokedexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokedex/_appLayout': {
      id: '/pokedex/_appLayout'
      path: '/pokedex'
      fullPath: '/pokedex'
      preLoaderRoute: typeof PokedexAppLayoutRouteImport
      parentRoute: typeof PokedexRoute
    }
    '/pokedex/_appLayout/': {
      id: '/pokedex/_appLayout/'
      path: '/'
      fullPath: '/pokedex/'
      preLoaderRoute: typeof PokedexAppLayoutIndexRouteImport
      parentRoute: typeof PokedexAppLayoutRoute
    }
    '/pokedex/_appLayout/games': {
      id: '/pokedex/_appLayout/games'
      path: '/games'
      fullPath: '/pokedex/games'
      preLoaderRoute: typeof PokedexAppLayoutGamesRouteImport
      parentRoute: typeof PokedexAppLayoutRoute
    }
    '/pokedex/_appLayout/favorites': {
      id: '/pokedex/_appLayout/favorites'
      path: '/favorites'
      fullPath: '/pokedex/favorites'
      preLoaderRoute: typeof PokedexAppLayoutFavoritesRouteImport
      parentRoute: typeof PokedexAppLayoutRoute
    }
    '/pokedex/_appLayout/about': {
      id: '/pokedex/_appLayout/about'
      path: '/about'
      fullPath: '/pokedex/about'
      preLoaderRoute: typeof PokedexAppLayoutAboutRouteImport
      parentRoute: typeof PokedexAppLayoutRoute
    }
    '/pokedex/_appLayout/$pokemonId': {
      id: '/pokedex/_appLayout/$pokemonId'
      path: '/$pokemonId'
      fullPath: '/pokedex/$pokemonId'
      preLoaderRoute: typeof PokedexAppLayoutPokemonIdRouteImport
      parentRoute: typeof PokedexAppLayoutRoute
    }
  }
}

interface PokedexAppLayoutRouteChildren {
  PokedexAppLayoutPokemonIdRoute: typeof PokedexAppLayoutPokemonIdRoute
  PokedexAppLayoutAboutRoute: typeof PokedexAppLayoutAboutRoute
  PokedexAppLayoutFavoritesRoute: typeof PokedexAppLayoutFavoritesRoute
  PokedexAppLayoutGamesRoute: typeof PokedexAppLayoutGamesRoute
  PokedexAppLayoutIndexRoute: typeof PokedexAppLayoutIndexRoute
}

const PokedexAppLayoutRouteChildren: PokedexAppLayoutRouteChildren = {
  PokedexAppLayoutPokemonIdRoute: PokedexAppLayoutPokemonIdRoute,
  PokedexAppLayoutAboutRoute: PokedexAppLayoutAboutRoute,
  PokedexAppLayoutFavoritesRoute: PokedexAppLayoutFavoritesRoute,
  PokedexAppLayoutGamesRoute: PokedexAppLayoutGamesRoute,
  PokedexAppLayoutIndexRoute: PokedexAppLayoutIndexRoute,
}

const PokedexAppLayoutRouteWithChildren =
  PokedexAppLayoutRoute._addFileChildren(PokedexAppLayoutRouteChildren)

interface PokedexRouteChildren {
  PokedexAppLayoutRoute: typeof PokedexAppLayoutRouteWithChildren
}

const PokedexRouteChildren: PokedexRouteChildren = {
  PokedexAppLayoutRoute: PokedexAppLayoutRouteWithChildren,
}

const PokedexRouteWithChildren =
  PokedexRoute._addFileChildren(PokedexRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PokedexRoute: PokedexRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
